{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-21T21:36:17.594Z",
    "end": "2023-10-21T21:36:18.220Z",
    "duration": 626,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ba7d872-e108-49c8-b2d6-3b9982aea0bd",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6027293a-9d91-447a-a75b-254cdf211524",
          "title": "Teste de Funcionalidade Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato produtos",
              "fullTitle": "Teste de Funcionalidade Produtos Deve validar contrato produtos",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "c9cc0a53-da06-4b20-a1c8-768a72766665",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Listar produtos",
              "fullTitle": "Teste de Funcionalidade Produtos GET - Listar produtos",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'produtos'\n}).then(function (response) {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(100);\n});",
              "err": {},
              "uuid": "a5a32cc1-09aa-4b79-ae0f-5431e0b8256d",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar produto",
              "fullTitle": "Teste de Funcionalidade Produtos Cadastrar produto",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProdutos(token, produto, 250, \"teste EBAC\", 250).then(function (response) {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal(\"Cadastro realizado com sucesso\");\n});",
              "err": {},
              "uuid": "55ded07f-4901-416f-aa26-99e8da78121c",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar mensagem de produto repitido",
              "fullTitle": "Teste de Funcionalidade Produtos Validar mensagem de produto repitido",
              "timedOut": null,
              "duration": 38,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProdutos(token, 'Produto EBAC 92889538', 250, \"teste EBAC\", 180).then(function (response) {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal(\"Já existe produto com esse nome\");\n});",
              "err": {},
              "uuid": "bb9aff07-21fa-497f-9b22-b96a4c24d6ed",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET + PUT - Editar produto cadastrado",
              "fullTitle": "Teste de Funcionalidade Produtos GET + PUT - Editar produto cadastrado",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.request({\n  method: 'GET',\n  url: 'produtos'\n}).then(function (response) {\n  cy.log(response.body.produtos[0]._id);\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 370,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 500\n    }\n  }).then(function (response) {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(100);\n});",
              "err": {},
              "uuid": "308c8dbe-33bc-4d27-9069-13ce9037d87a",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Deve editar o produto cadastrado previamente",
              "fullTitle": "Teste de Funcionalidade Produtos PUT - Deve editar o produto cadastrado previamente",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProdutos(token, produto, 250, \"teste EBAC\", 250).then(function (response) {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal(\"Cadastro realizado com sucesso\");\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto + \" editado\",\n      \"preco\": 200,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 200\n    }\n  }).then(function (response) {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n  expect(response.status).to.equal(201);\n  expect(response.duration).to.be.lessThan(100);\n});",
              "err": {},
              "uuid": "de407b2d-0564-4e0a-b090-2d3146432c8e",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Deve deletar o produto cadastrado previamente",
              "fullTitle": "Teste de Funcionalidade Produtos DELETE - Deve deletar o produto cadastrado previamente",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProdutos(token, produto, 250, \"teste EBAC\", 250).then(function (response) {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal(\"Cadastro realizado com sucesso\");\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(function (response) {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n  expect(response.status).to.equal(201);\n  expect(response.duration).to.be.lessThan(100);\n});",
              "err": {},
              "uuid": "1613e510-b773-4220-a533-434d0161b929",
              "parentUUID": "6027293a-9d91-447a-a75b-254cdf211524",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9cc0a53-da06-4b20-a1c8-768a72766665",
            "a5a32cc1-09aa-4b79-ae0f-5431e0b8256d",
            "55ded07f-4901-416f-aa26-99e8da78121c",
            "bb9aff07-21fa-497f-9b22-b96a4c24d6ed",
            "308c8dbe-33bc-4d27-9069-13ce9037d87a",
            "de407b2d-0564-4e0a-b090-2d3146432c8e",
            "1613e510-b773-4220-a533-434d0161b929"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 458,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}